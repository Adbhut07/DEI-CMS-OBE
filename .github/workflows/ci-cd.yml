name: CI/CD Pipeline
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  backend:
    name: Backend CI/CD
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          
      - name: Install backend dependencies
        run: npm install
        
      - name: Generate Prisma client
        run: npx prisma generate
        
      - name: Build backend
        run: npm run build
        
      - name: Create .env file
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env
          echo "PORT=8000" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          # Add other environment variables as needed
          
      - name: Docker build
        run: docker build -t dei-obe-backend .
      
      # Deploy using SSH with the correct directory path
      - name: Deploy on EC2 via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script_stop: true
          command_timeout: 20m
          script: |
            # Remove old backend folder
            rm -rf /home/ubuntu/dei-obe-backend

            # Clone latest repo
            git clone https://github.com/Adbhut07/DEI-CMS-OBE.git /home/ubuntu/dei-obe-backend

            # Go to backend folder
            cd /home/ubuntu/dei-obe-backend/backend

            # Create .env file
            echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
            echo "PORT=8000" >> .env

            # Stop and remove old container if running
            docker stop dei-obe-backend || true
            docker rm dei-obe-backend || true

            # Build and run Docker container
            docker build -t dei-obe-backend .
            docker run -d -p 8000:8000 --env-file .env --name dei-obe-backend dei-obe-backend
  
  frontend:
    name: Frontend CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: client/package-lock.json
          
      - name: Install frontend dependencies
        run: npm install --legacy-peer-deps
        
      - name: Build frontend
        run: npm run build